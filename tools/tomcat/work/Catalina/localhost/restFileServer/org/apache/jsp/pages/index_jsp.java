/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.70
 * Generated at: 2017-10-12 18:02:12 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.pages;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("    <title>exam REST</title>\n");
      out.write("</head>\n");
      out.write("\n");
      out.write("<script src=\"//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js\"></script>\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("    var prefix = 'http://localhost:8080/restFileServer';\n");
      out.write("    var findBoxValue = document.getElementById('findBox').value;\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("    var RestFindFile = function() {\n");
      out.write("        $.ajax({\n");
      out.write("            type: 'GET',\n");
      out.write("            url:  prefix + '/' + findBoxValue,\n");
      out.write("            dataType: 'json',\n");
      out.write("            async: true,\n");
      out.write("            success: function(result) {\n");
      out.write("                alert('Время: ' + result.time\n");
      out.write("                        + ', сообщение: ' + result.message);\n");
      out.write("            },\n");
      out.write("            error: function(jqXHR, textStatus, errorThrown) {\n");
      out.write("                alert(jqXHR.status + ' ' + jqXHR.responseText);\n");
      out.write("            }\n");
      out.write("        });\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    var RestGetFile = function() {\n");
      out.write("        $.ajax({\n");
      out.write("            type: 'GET',\n");
      out.write("            url:  prefix + '/' + Date.now(),\n");
      out.write("            dataType: 'json',\n");
      out.write("            async: true,\n");
      out.write("            success: function(result) {\n");
      out.write("                alert('Время: ' + result.time\n");
      out.write("                        + ', сообщение: ' + result.message);\n");
      out.write("            },\n");
      out.write("            error: function(jqXHR, textStatus, errorThrown) {\n");
      out.write("                alert(jqXHR.status + ' ' + jqXHR.responseText);\n");
      out.write("            }\n");
      out.write("        });\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    var RestLoadFile = function() {\n");
      out.write("        var JSONObject= {\n");
      out.write("            'time': Date.now(),\n");
      out.write("            'message': 'Это пример вызова PUT метода'\n");
      out.write("        };\n");
      out.write("\n");
      out.write("        $.ajax({\n");
      out.write("            type: 'PUT',\n");
      out.write("            url:  prefix,\n");
      out.write("            contentType: 'application/json; charset=utf-8',\n");
      out.write("            data: JSON.stringify(JSONObject),\n");
      out.write("            dataType: 'json',\n");
      out.write("            async: true,\n");
      out.write("            success: function(result) {\n");
      out.write("                alert('Время: ' + result.time\n");
      out.write("                        + ', сообщенеи: ' + result.message);\n");
      out.write("            },\n");
      out.write("            error: function(jqXHR, textStatus, errorThrown) {\n");
      out.write("                alert(jqXHR.status + ' ' + jqXHR.responseText);\n");
      out.write("            }\n");
      out.write("        });\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    var RestDelete = function() {\n");
      out.write("        $.ajax({\n");
      out.write("            type: 'DELETE',\n");
      out.write("            url:  prefix + '/' + Date.now(),\n");
      out.write("            dataType: 'json',\n");
      out.write("            async: true,\n");
      out.write("            success: function(result) {\n");
      out.write("                alert('Время: ' + result.time\n");
      out.write("                        + ', сообщение: ' + result.message);\n");
      out.write("            },\n");
      out.write("            error: function(jqXHR, textStatus, errorThrown) {\n");
      out.write("                alert(jqXHR.status + ' ' + jqXHR.responseText);\n");
      out.write("            }\n");
      out.write("        });\n");
      out.write("    }\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("    <h3>пример использования REST</h3>\n");
      out.write("\n");
      out.write("    <button type=\"button\" onclick=\"RestFindFile()\">Найти файл</button>\n");
      out.write("    <input name=\"findBox\" maxlength=\"25\" size=\"40\" >\n");
      out.write("    <BR>\n");
      out.write("    <button type=\"button\" onclick=\"RestGetFile()\">Получение файла</button>\n");
      out.write("    <input maxlength=\"25\" size=\"40\" >\n");
      out.write("    <BR>\n");
      out.write("    <button type=\"button\" onclick=\"RestLoadFile()\">Залить Файл</button>\n");
      out.write("    <input maxlength=\"25\" size=\"40\" >\n");
      out.write("    <BR>\n");
      out.write("    <button type=\"button\" onclick=\"RestDeleteFile()\">Удалить файл</button>\n");
      out.write("    <input maxlength=\"25\" size=\"40\" >\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
